
const
 AV_CH_FRONT_LEFT             =$00000001;
 AV_CH_FRONT_RIGHT            =$00000002;
 AV_CH_FRONT_CENTER           =$00000004;
 AV_CH_LOW_FREQUENCY          =$00000008;
 AV_CH_BACK_LEFT              =$00000010;
 AV_CH_BACK_RIGHT             =$00000020;
 AV_CH_FRONT_LEFT_OF_CENTER   =$00000040;
 AV_CH_FRONT_RIGHT_OF_CENTER  =$00000080;
 AV_CH_BACK_CENTER            =$00000100;
 AV_CH_SIDE_LEFT              =$00000200;
 AV_CH_SIDE_RIGHT             =$00000400;
 AV_CH_TOP_CENTER             =$00000800;
 AV_CH_TOP_FRONT_LEFT         =$00001000;
 AV_CH_TOP_FRONT_CENTER       =$00002000;
 AV_CH_TOP_FRONT_RIGHT        =$00004000;
 AV_CH_TOP_BACK_LEFT          =$00008000;
 AV_CH_TOP_BACK_CENTER        =$00010000;
 AV_CH_TOP_BACK_RIGHT         =$00020000;
 AV_CH_STEREO_LEFT            =$20000000;  ///< Stereo downmix.
 AV_CH_STEREO_RIGHT           =$40000000;  ///< See AV_CH_STEREO_LEFT.
 AV_CH_WIDE_LEFT              =$0000000080000000;
 AV_CH_WIDE_RIGHT             =$0000000100000000;
 AV_CH_SURROUND_DIRECT_LEFT   =$0000000200000000;
 AV_CH_SURROUND_DIRECT_RIGHT  =$0000000400000000;
 AV_CH_LOW_FREQUENCY_2        =$0000000800000000;

(** Channel mask value used for AVCodecContext.request_channel_layout
    to indicate that the user requests the channel order of the decoder output
    to be the native codec channel order. *)
 AV_CH_LAYOUT_NATIVE          =$8000000000000000;




(**
 * @}
 * @defgroup channel_mask_c Audio channel layouts
 * @{
 * *)
 AV_CH_LAYOUT_MONO              =(AV_CH_FRONT_CENTER);
 AV_CH_LAYOUT_STEREO            =(AV_CH_FRONT_LEFT or AV_CH_FRONT_RIGHT);
 AV_CH_LAYOUT_2POINT1           =(AV_CH_LAYOUT_STEREO or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_2_1               =(AV_CH_LAYOUT_STEREO or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_SURROUND          =(AV_CH_LAYOUT_STEREO or AV_CH_FRONT_CENTER);
 AV_CH_LAYOUT_3POINT1           =(AV_CH_LAYOUT_SURROUND or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_4POINT0           =(AV_CH_LAYOUT_SURROUND or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_4POINT1           =(AV_CH_LAYOUT_4POINT0 or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_2_2               =(AV_CH_LAYOUT_STEREO or AV_CH_SIDE_LEFT or AV_CH_SIDE_RIGHT);
 AV_CH_LAYOUT_QUAD              =(AV_CH_LAYOUT_STEREO or AV_CH_BACK_LEFT or AV_CH_BACK_RIGHT);
 AV_CH_LAYOUT_5POINT0           =(AV_CH_LAYOUT_SURROUND or AV_CH_SIDE_LEFT or AV_CH_SIDE_RIGHT);
 AV_CH_LAYOUT_5POINT1           =(AV_CH_LAYOUT_5POINT0 or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_5POINT0_BACK      =(AV_CH_LAYOUT_SURROUND or AV_CH_BACK_LEFT or AV_CH_BACK_RIGHT);
 AV_CH_LAYOUT_5POINT1_BACK      =(AV_CH_LAYOUT_5POINT0_BACK or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_6POINT0           =(AV_CH_LAYOUT_5POINT0 or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_6POINT0_FRONT     =(AV_CH_LAYOUT_2_2 or AV_CH_FRONT_LEFT_OF_CENTER or AV_CH_FRONT_RIGHT_OF_CENTER);
 AV_CH_LAYOUT_HEXAGONAL         =(AV_CH_LAYOUT_5POINT0_BACK or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_6POINT1           =(AV_CH_LAYOUT_5POINT1 or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_6POINT1_BACK      =(AV_CH_LAYOUT_5POINT1_BACK or AV_CH_BACK_CENTER);
 AV_CH_LAYOUT_6POINT1_FRONT     =(AV_CH_LAYOUT_6POINT0_FRONT or AV_CH_LOW_FREQUENCY);
 AV_CH_LAYOUT_7POINT0           =(AV_CH_LAYOUT_5POINT0 or AV_CH_BACK_LEFT or AV_CH_BACK_RIGHT);
 AV_CH_LAYOUT_7POINT0_FRONT     =(AV_CH_LAYOUT_5POINT0 or AV_CH_FRONT_LEFT_OF_CENTER or AV_CH_FRONT_RIGHT_OF_CENTER);
 AV_CH_LAYOUT_7POINT1           =(AV_CH_LAYOUT_5POINT1 or AV_CH_BACK_LEFT or AV_CH_BACK_RIGHT);
 AV_CH_LAYOUT_7POINT1_WIDE      =(AV_CH_LAYOUT_5POINT1 or AV_CH_FRONT_LEFT_OF_CENTER or AV_CH_FRONT_RIGHT_OF_CENTER);
 AV_CH_LAYOUT_7POINT1_WIDE_BACK =(AV_CH_LAYOUT_5POINT1_BACK or AV_CH_FRONT_LEFT_OF_CENTER or AV_CH_FRONT_RIGHT_OF_CENTER);
 AV_CH_LAYOUT_OCTAGONAL         =(AV_CH_LAYOUT_5POINT0 or AV_CH_BACK_LEFT or AV_CH_BACK_CENTER or AV_CH_BACK_RIGHT);
 AV_CH_LAYOUT_HEXADECAGONAL     =(AV_CH_LAYOUT_OCTAGONAL or AV_CH_WIDE_LEFT or AV_CH_WIDE_RIGHT or AV_CH_TOP_BACK_LEFT or AV_CH_TOP_BACK_RIGHT or AV_CH_TOP_BACK_CENTER or AV_CH_TOP_FRONT_CENTER or AV_CH_TOP_FRONT_LEFT or AV_CH_TOP_FRONT_RIGHT);
 AV_CH_LAYOUT_STEREO_DOWNMIX    =(AV_CH_STEREO_LEFT or AV_CH_STEREO_RIGHT);



(**
 * Return default channel layout for a given number of channels.
 *)
function av_get_default_channel_layout(nb_channels: Integer): Int64; cdecl;
   external LIBAVUTIL_LIBNAME name 'av_get_default_channel_layout';

(**
 * Return the number of channels in the channel layout.
 *)
function av_get_channel_layout_nb_channels(channel_layout: UInt64): Integer; cdecl;
   external LIBAVUTIL_LIBNAME name 'av_get_channel_layout_nb_channels';



